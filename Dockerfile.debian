ARG BASE_IMAGE=ubuntu:bionic
FROM ${BASE_IMAGE}
ARG BASE_IMAGE=ubuntu:bionic

RUN if [ "${BASE_IMAGE}" = "debian:stretch" ]; then \
      echo "deb http://ftp.debian.org/debian stretch-backports main" \
        > /etc/apt/sources.list.d/stretch-backports.list; \
    elif [ "${BASE_IMAGE}" = "ubuntu:xenial" ]; then \
      apt-get update -q && \
      apt-get install --yes wget software-properties-common && \
      add-apt-repository ppa:openjdk-r/ppa --yes && \
      echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main" \
        > /etc/apt/sources.list.d/llvm8.list && \
      echo "deb-src http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main" \
        >> /etc/apt/sources.list.d/llvm8.list && \
      wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - ; \
    fi

RUN apt-get update -q && \
    apt-get install -y \
      git debhelper maven cmake libboost-test-dev libyaml-dev libjemalloc-dev \
      flex bison clang-8 llvm-8-tools lld-8 zlib1g-dev libgmp-dev libmpfr-dev \
      gcc z3 libz3-dev opam pkg-config curl python3 openjdk-11-jdk sudo

RUN curl -sSL https://get.haskellstack.org/ | sh      

ARG USER_ID=1000
ARG GROUP_ID=1000

RUN addgroup --gid ${GROUP_ID} user \
  && adduser --uid ${USER_ID} \
             --gid ${GROUP_ID} \
             --shell /bin/sh \
             --disabled-password \
             --gecos "" \
             user \
  && usermod -aG sudo user \
  && echo "user ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/user

USER ${USER_ID}:${GROUP_ID}

ADD llvm-backend/src/main/native/llvm-backend/install-rust \
    llvm-backend/src/main/native/llvm-backend/rust-checksum \
    /home/user/
RUN cd /home/user/ && ./install-rust

ADD k-distribution/src/main/scripts/bin/k-configure-opam-dev \
    k-distribution/src/main/scripts/bin/k-configure-opam-common \
    /home/user/.tmp-opam/bin/
ADD k-distribution/src/main/scripts/lib/opam  \
    /home/user/.tmp-opam/lib/opam/
RUN cd /home/user \
    && ./.tmp-opam/bin/k-configure-opam-dev

ENV LC_ALL=C.UTF-8

ADD --chown=user:user \
    haskell-backend/src/main/native/haskell-backend/stack.yaml \
    /home/user/.tmp-haskell/
ADD --chown=user:user \
    haskell-backend/src/main/native/haskell-backend/kore/package.yaml \
    /home/user/.tmp-haskell/kore/
RUN cd /home/user/.tmp-haskell \
    && stack build --only-snapshot \
                   --test \
                   --bench \
                   --no-haddock-deps \
                   --haddock \
                   --library-profiling

ADD pom.xml /home/user/.tmp-maven/
ADD ktree/pom.xml /home/user/.tmp-maven/ktree/
ADD llvm-backend/pom.xml /home/user/.tmp-maven/llvm-backend/
ADD llvm-backend/src/main/native/llvm-backend/matching/pom.xml \
    /home/user/.tmp-maven/llvm-backend/src/main/native/llvm-backend/matching/
ADD haskell-backend/pom.xml /home/user/.tmp-maven/haskell-backend/
ADD ocaml-backend/pom.xml /home/user/.tmp-maven/ocaml-backend/
ADD kernel/pom.xml /home/user/.tmp-maven/kernel/
ADD java-backend/pom.xml /home/user/.tmp-maven/java-backend/
ADD k-distribution/pom.xml /home/user/.tmp-maven/k-distribution/
ADD kore/pom.xml /home/user/.tmp-maven/kore/
RUN cd /home/user/.tmp-maven \
    && mvn dependency:go-offline 
